name: CI Pipeline


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for SonarQube & full git history operations

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-sonar-

      - name: Build and run tests with Maven
        run: mvn -B clean verify

      - name: Upload test reports (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

      - name: Analyze with SonarQube
        if: success()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}         # add this secret in repo settings
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # set if you use a custom SonarQube server
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=vishnu-siva_Software-Testing-and-Quality-for-Spring-Boot \
            ${SONAR_HOST_URL:+-Dsonar.host.url=$SONAR_HOST_URL} \
            -Dsonar.login=$SONAR_TOKEN